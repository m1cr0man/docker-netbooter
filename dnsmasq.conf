port=0
bind-dynamic
no-poll
log-dhcp
enable-tftp

dhcp-leasefile=/netboot/dnsmasq.leases
tftp-root=/netboot/tftproot

# BEGIN authoritative DHCP
dhcp-authoritative
dhcp-range=NETPREFIX.RANGESTART,NETPREFIX.RANGEEND,12h

# Useful reference https://blog.abysm.org/2020/06/human-readable-dhcp-options-for-dnsmasq/
dhcp-option=option:router,GATEWAY
dhcp-option=option:domain-name,DOMAINNAME
dhcp-option=option:dns-server,DNSSERVERS
dhcp-option=option:netmask,NETMASK

# Speed up DHCP when no proxy is in use (set no-proxydhcp)
dhcp-option=176,1
# END authoritative DHCP
# BEGIN proxy DHCP
dhcp-range=NETPREFIX.RANGESTART,proxy,NETMASK
# END proxy DHCP

# Disable re-use of the DHCP servername and filename fields as extra
# option space. That's to avoid confusing some old or broken DHCP clients.
# dhcp-no-override

# Match syntax here is set:$VARNAME,$TAG[,$VALUE]
dhcp-match=set:iPXE,175
dhcp-match=set:uefi,option:client-arch,6
dhcp-match=set:uefi,option:client-arch,7
dhcp-match=set:uefi,option:client-arch,9
dhcp-boot=tag:iPXE,http://${next-server}:8069/menu.ipxe
dhcp-boot=tag:!iPXE,tag:uefi,ipxe.efi
dhcp-boot=tag:!iPXE,tag:!uefi,undionly.kpxe

# In testing, I found that dhcp-boot is insufficient in proxy environments.
# Configuring pxe-service resolved all issues.
pxe-service=tag:iPXE,X86PC,PC-DOS: menu.ipxe - iPXE,http://${next-server}:8069/menu.ipxe
pxe-service=tag:iPXE,X86-64_EFI,UEFI: menu.ipxe - iPXE,http://${next-server}:8069/menu.ipxe
pxe-service=tag:!iPXE,X86PC,PC-DOS: Chainload Boot - iPXE,undionly.kpxe
pxe-service=tag:!iPXE,X86-64_EFI,UEFI: Chainload Boot - iPXE,ipxe.efi
